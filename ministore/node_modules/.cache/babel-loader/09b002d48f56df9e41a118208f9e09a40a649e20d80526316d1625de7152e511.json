{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\MiniStore\\\\ministore\\\\src\\\\contexts\\\\products.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext } from \"react\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductsContext = /*#__PURE__*/createContext({});\nconst queryClient = new QueryClient();\nconst ProductsProvider = ({\n  children\n}) => {\n  _s();\n  async function GetProducts() {\n    const response = await fetch(\"https://mks-frontend-challenge-04811e8151e6.herokuapp.com/api/v1/products?page=1&rows=8&sortBy=id&orderBy=ASC\");\n    if (!response.ok) throw new Error(\"Os dados não foam carregados\");\n    var result;\n    await response.json().then(res => {\n      result = res.products;\n    });\n    console.log(\"passou a response\");\n    console.log(result);\n    return response.json();\n  }\n  const {\n    data,\n    isLoading,\n    isError\n  } = useQuery({\n    queryKey: [\"products\"],\n    queryFn: () => GetProducts()\n  }, queryClient);\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(ProductsContext.Provider, {\n      value: {\n        data,\n        isLoading,\n        isError\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductsProvider, \"m2V16pPxX5wFXLddQ48cvYAyihY=\", false, function () {\n  return [useQuery];\n});\n_c = ProductsProvider;\nexport default ProductsProvider;\nvar _c;\n$RefreshReg$(_c, \"ProductsProvider\");","map":{"version":3,"names":["React","createContext","QueryClient","QueryClientProvider","useQuery","jsxDEV","_jsxDEV","ProductsContext","queryClient","ProductsProvider","children","_s","GetProducts","response","fetch","ok","Error","result","json","then","res","products","console","log","data","isLoading","isError","queryKey","queryFn","client","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Danie/MiniStore/ministore/src/contexts/products.tsx"],"sourcesContent":["import React, {createContext, useState, useEffect} from \"react\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"@tanstack/react-query\";\r\nimport { error } from \"console\";\r\n\r\n\r\nexport const ProductsContext = createContext({})\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nconst ProductsProvider = ({children}:any) =>{\r\n\r\n\r\n    async function GetProducts (){\r\n        const response = await fetch(\"https://mks-frontend-challenge-04811e8151e6.herokuapp.com/api/v1/products?page=1&rows=8&sortBy=id&orderBy=ASC\")\r\n        if (!response.ok)\r\n            throw new Error(\"Os dados não foam carregados\")\r\n        \r\n        var result;        \r\n        await response.json().then(res => {result = res.products})\r\n        console.log(\"passou a response\")\r\n        console.log(result);\r\n\r\n        return response.json()\r\n    }\r\n\r\n\r\n    const {data, isLoading, isError } = useQuery({queryKey:[\"products\"], queryFn:()=>GetProducts()}, queryClient)\r\n\r\n \r\n\r\n    return(\r\n        <QueryClientProvider client={queryClient}>\r\n            <ProductsContext.Provider value={{data, isLoading, isError}}>\r\n                {children}\r\n            </ProductsContext.Provider>\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\nexport default ProductsProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,QAA4B,OAAO;AAC/D,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInF,OAAO,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC,CAAC,CAAC;AAEhD,MAAMO,WAAW,GAAG,IAAIN,WAAW,CAAC,CAAC;AAErC,MAAMO,gBAAgB,GAAGA,CAAC;EAACC;AAAY,CAAC,KAAI;EAAAC,EAAA;EAGxC,eAAeC,WAAWA,CAAA,EAAG;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+GAA+G,CAAC;IAC7I,IAAI,CAACD,QAAQ,CAACE,EAAE,EACZ,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IAEnD,IAAIC,MAAM;IACV,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;MAACH,MAAM,GAAGG,GAAG,CAACC,QAAQ;IAAA,CAAC,CAAC;IAC1DC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCD,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;IAEnB,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC1B;EAGA,MAAM;IAACM,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGtB,QAAQ,CAAC;IAACuB,QAAQ,EAAC,CAAC,UAAU,CAAC;IAAEC,OAAO,EAACA,CAAA,KAAIhB,WAAW,CAAC;EAAC,CAAC,EAAEJ,WAAW,CAAC;EAI7G,oBACIF,OAAA,CAACH,mBAAmB;IAAC0B,MAAM,EAAErB,WAAY;IAAAE,QAAA,eACrCJ,OAAA,CAACC,eAAe,CAACuB,QAAQ;MAACC,KAAK,EAAE;QAACP,IAAI;QAAEC,SAAS;QAAEC;MAAO,CAAE;MAAAhB,QAAA,EACvDA;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAE9B,CAAC;AAAAxB,EAAA,CA5BKF,gBAAgB;EAAA,QAiBkBL,QAAQ;AAAA;AAAAgC,EAAA,GAjB1C3B,gBAAgB;AA8BtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}