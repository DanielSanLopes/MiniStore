{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danie\\\\MiniStore\\\\ministore\\\\src\\\\contexts\\\\products.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect } from \"react\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductsContext = /*#__PURE__*/createContext({});\nconst queryClient = new QueryClient();\nconst ProductsProvider = ({\n  children\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  _s(useEffect(_s(() => {\n    _s();\n    const {\n      data,\n      isLoading,\n      isError\n    } = useQuery({\n      queryKey: [\"products\"],\n      queryFn: () => GetProducts()\n    }, queryClient);\n  }, \"m2V16pPxX5wFXLddQ48cvYAyihY=\", false, function () {\n    return [useQuery];\n  })), \"m2V16pPxX5wFXLddQ48cvYAyihY=\", false, function () {\n    return [useQuery];\n  });\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(ProductsContext.Provider, {\n      value: {\n        data,\n        isLoading,\n        isError\n      },\n      children: [console.log(data), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s2(ProductsProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProductsProvider;\nasync function GetProducts() {\n  const response = await fetch(\"https://mks-frontend-challenge-04811e8151e6.herokuapp.com/api/v1/products?page=1&rows=8&sortBy=id&orderBy=ASC\");\n  if (!response.ok) throw new Error(\"Os dados não foam carregados\");\n\n  // var result;        \n  // await response.json().then(res => {result = res.products})\n  // console.log(\"passou a response\")\n  // console.log(result);\n\n  return response.json();\n}\n_c2 = GetProducts;\nexport default ProductsProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProductsProvider\");\n$RefreshReg$(_c2, \"GetProducts\");","map":{"version":3,"names":["React","createContext","useEffect","QueryClient","QueryClientProvider","useQuery","jsxDEV","_jsxDEV","ProductsContext","queryClient","ProductsProvider","children","_s2","_s","$RefreshSig$","data","isLoading","isError","queryKey","queryFn","GetProducts","client","Provider","value","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","response","fetch","ok","Error","json","_c2","$RefreshReg$"],"sources":["C:/Users/Danie/MiniStore/ministore/src/contexts/products.tsx"],"sourcesContent":["import React, {createContext, useState, useEffect} from \"react\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"@tanstack/react-query\";\r\nimport { error } from \"console\";\r\n\r\n\r\nexport const ProductsContext = createContext({})\r\n\r\nconst queryClient = new QueryClient()\r\n\r\n\r\n\r\n\r\n\r\nconst ProductsProvider = ({children}:any) =>{\r\n\r\n    useEffect(()=>{\r\n        const {data, isLoading, isError } = useQuery({queryKey:[\"products\"], queryFn:()=>GetProducts()}, queryClient)\r\n    })\r\n    return(\r\n        <QueryClientProvider client={queryClient}>\r\n            <ProductsContext.Provider value={{data, isLoading, isError}}>\r\n                {console.log(data)}\r\n                {children}\r\n            </ProductsContext.Provider>\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\n\r\nasync function GetProducts (){\r\n    const response = await fetch(\"https://mks-frontend-challenge-04811e8151e6.herokuapp.com/api/v1/products?page=1&rows=8&sortBy=id&orderBy=ASC\")\r\n    if (!response.ok)\r\n        throw new Error(\"Os dados não foam carregados\")\r\n    \r\n    // var result;        \r\n    // await response.json().then(res => {result = res.products})\r\n    // console.log(\"passou a response\")\r\n    // console.log(result);\r\n\r\n    return response.json()\r\n}\r\n\r\nexport default ProductsProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAYC,SAAS,QAAO,OAAO;AAC/D,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInF,OAAO,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC,CAAC,CAAC;AAEhD,MAAMQ,WAAW,GAAG,IAAIN,WAAW,CAAC,CAAC;AAMrC,MAAMO,gBAAgB,GAAGA,CAAC;EAACC;AAAY,CAAC,KAAI;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAExCD,EAAA,CAAAX,SAAS,CAAAW,EAAA,CAAC,MAAI;IAAAA,EAAA;IACV,MAAM;MAACE,IAAI;MAAEC,SAAS;MAAEC;IAAQ,CAAC,GAAGZ,QAAQ,CAAC;MAACa,QAAQ,EAAC,CAAC,UAAU,CAAC;MAAEC,OAAO,EAACA,CAAA,KAAIC,WAAW,CAAC;IAAC,CAAC,EAAEX,WAAW,CAAC;EACjH,CAAC;IAAA,QADuCJ,QAAQ;EAAA,EAC/C,CAAC;IAAA,QADsCA,QAAQ;EAAA;EAEhD,oBACIE,OAAA,CAACH,mBAAmB;IAACiB,MAAM,EAAEZ,WAAY;IAAAE,QAAA,eACrCJ,OAAA,CAACC,eAAe,CAACc,QAAQ;MAACC,KAAK,EAAE;QAACR,IAAI;QAAEC,SAAS;QAAEC;MAAO,CAAE;MAAAN,QAAA,GACvDa,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC,EACjBJ,QAAQ;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAE9B,CAAC;AAAAjB,GAAA,CAbKF,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AAgBtB,eAAeU,WAAWA,CAAA,EAAG;EACzB,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,+GAA+G,CAAC;EAC7I,IAAI,CAACD,QAAQ,CAACE,EAAE,EACZ,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;;EAEnD;EACA;EACA;EACA;;EAEA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC1B;AAACC,GAAA,GAXchB,WAAW;AAa1B,eAAeV,gBAAgB;AAAC,IAAAoB,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}